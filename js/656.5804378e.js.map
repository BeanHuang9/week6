{"version":3,"file":"js/656.5804378e.js","mappings":"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","sources":["webpack://week6/../src/index.ts","webpack://week6/./src/libs/emitter.js","webpack://week6/./src/views/CartView.vue","webpack://week6/./src/views/CartView.vue?73a2"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt';\n\nconst emitter = mitt();\nexport default emitter;\n","<template>\n  <div class=\"container\">\n    <h2>購物車</h2>\n    <table class=\"table align-middle\">\n      <thead>\n        <tr>\n          <th>圖片</th>\n          <th>商品名稱</th>\n          <th>價格</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr v-for=\"product in products\" :key=\"product.id\">\n          <td style=\"width: 200px\">\n            <div\n              :style=\"{ backgroundImage: `url(${product.imageUrl})` }\"\n              style=\"\n                height: 100px;\n                background-size: cover;\n                background-position: center;\n              \"\n            ></div>\n          </td>\n          <td>{{ product.title }}</td>\n          <td>\n            <div class=\"h5\" v-if=\"product.price === product.origin_price\">\n              {{ product.price }} 元\n            </div>\n            <div v-else>\n              <del class=\"h6\">原價 {{ product.origin_price }} 元</del>\n              <div class=\"h5\">現在只要 {{ product.price }} 元</div>\n            </div>\n          </td>\n          <td>\n            <div class=\"btn-group btn-group-sm\">\n              <button\n                type=\"button\"\n                class=\"btn btn-outline-secondary\"\n                @click=\"openProductModal(product.id)\"\n                :disabled=\"isLoadingItem === product.id\"\n              >\n                <span\n                  class=\"spinner-grow spinner-grow-sm\"\n                  v-show=\"isLoadingItem === product.id\"\n                ></span>\n                查看更多\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-danger\"\n                @click=\"addToCart(product.id)\"\n                :disabled=\"isLoadingItem === product.id\"\n              >\n                <span\n                  class=\"spinner-grow spinner-grow-sm\"\n                  v-show=\"isLoadingItem === product.id\"\n                ></span>\n                加到購物車\n              </button>\n            </div>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</template>\n\n<script>\nimport emitter from '@/libs/emitter';\n\nexport default {\n  data() {\n    return {\n      cartData: {\n        carts: [],\n      },\n      products: [],\n    };\n  },\n\n  methods: {\n    getProducts() {\n      this.$http\n        .get(\n          `${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/products/all`,\n        )\n        .then((res) => {\n          console.log(res);\n          this.products = res.data.products;\n        });\n    },\n    //加入購物車 / 參數預設值 qty = 1\n    addToCart(id, qty = 1) {\n      const data = {\n        product_id: id,\n        qty,\n      };\n      this.isLoadingItem = id;\n      this.$http\n        .post(\n          `${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/cart`,\n          { data },\n        )\n        .then((res) => {\n          console.log(res);\n          emitter.emit('get-cart');\n        });\n    },\n  },\n  mounted() {\n    this.getProducts();\n  },\n};\n</script>\n","import { render } from \"./CartView.vue?vue&type=template&id=661eccf6\"\nimport script from \"./CartView.vue?vue&type=script&lang=js\"\nexport * from \"./CartView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bean/Downloads/week6-master/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","class","_createElementVNode","style","_createElementBlock","_hoisted_2","_hoisted_4","_Fragment","_renderList","$data","product","key","id","backgroundImage","imageUrl","_toDisplayString","title","price","origin_price","_hoisted_7","onClick","_ctx","disabled","$options","data","cartData","carts","products","methods","getProducts","this","$http","then","res","console","log","addToCart","qty","product_id","isLoadingItem","post","mounted","__exports__","render"],"sourceRoot":""}