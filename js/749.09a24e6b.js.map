{"version":3,"file":"js/749.09a24e6b.js","mappings":"mHAuCCA,GAOA,MAAO,CAKNA,IAPDA,EAAMA,GAAO,IAAIC,IAehBC,GAAAA,SAA6BC,EAAWC,GACvC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,EACHA,EAASE,KAAKH,GAGdJ,EAAKQ,IAAIL,EAAM,CAACC,KAWlBK,IAAAA,SAA8BN,EAAWC,GACxC,IAAMC,EAAmDL,EAAKM,IAAIH,GAC9DE,IACCD,EACHC,EAASK,OAAOL,EAASM,QAAQP,KAAa,EAAG,GAGjDJ,EAAKQ,IAAIL,EAAM,MAelBS,KAAAA,SAA+BT,EAAWU,GACzC,IAAIR,EAAWL,EAAKM,IAAIH,GACpBE,GACFA,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQS,OAIXR,EAAWL,EAAKM,IAAI,OAElBD,EACCS,QACAC,KAAI,SAACX,GACLA,EAAQD,EAAMU,Q,gCC/GpB,MAAMG,EAAUC,IAChB,S,wMCFEC,EAAAA,EAAAA,IAA2BC,IAC3BD,EAAAA,EAAAA,IAA2BE,IAA3B,I,uBCDKC,MAAM,iD,GACJA,MAAM,mB,WACgC,U,GACzCC,EAAAA,EAAAA,GAUS,UATPD,MAAM,iBACNlB,KAAK,SACL,iBAAe,WACf,iBAAe,0BACf,gBAAc,yBACd,gBAAc,QACd,aAAW,qBAPb,EASEmB,EAAAA,EAAAA,GAAyC,QAAnCD,MAAM,0BATd,G,GAWKA,MAAM,2BAA2BE,GAAG,0B,GACnCF,MAAM,mC,GAIJA,MAAM,Y,WACqC,Q,GAE3CA,MAAM,Y,WACiC,O,GAEvCA,MAAM,Y,WACkC,M,GAIxClB,KAAK,SAASkB,MAAM,mB,WAAkB,Q,GAEtCA,MAAM,gC,0EAhClBG,EAAAA,EAAAA,IAqCM,MArCN,EAqCM,EApCJF,EAAAA,EAAAA,GAmCM,MAnCN,EAmCM,EAlCJJ,EAAAA,EAAAA,IAA6DO,EAAA,CAAhDJ,MAAM,eAAeK,GAAG,KAArC,C,kBAAyC,IAAM,M,MAC/CC,GAWAL,EAAAA,EAAAA,GAeM,MAfN,EAeM,EAdJA,EAAAA,EAAAA,GAaK,KAbL,EAaK,EATHA,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADHJ,EAAAA,EAAAA,IAA+DO,EAAA,CAAlDJ,MAAM,WAAWK,GAAG,aAAjC,C,kBAA6C,IAAI,M,SAEnDJ,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADHJ,EAAAA,EAAAA,IAA0DO,EAAA,CAA7CJ,MAAM,WAAWK,GAAG,SAAjC,C,kBAAyC,IAAG,M,SAE9CJ,EAAAA,EAAAA,GAEK,KAFL,EAEK,EADHJ,EAAAA,EAAAA,IAA0DO,EAAA,CAA7CJ,MAAM,WAAWK,GAAG,UAAjC,C,kBAA0C,IAAE,M,aAIlDJ,EAAAA,EAAAA,GAKS,SALT,EAKS,IAHPA,EAAAA,EAAAA,GAEO,OAFP,GAEOM,EAAAA,EAAAA,IADFC,EAAAA,eAAa,S,aAU1B,GACEC,OACE,MAAO,CACLC,SAAU,CACRC,MAAO,MAKbC,QAAS,CACPC,UACEC,KAAKC,MACF9B,IAAK,2DACL+B,MAAMC,IACLC,QAAQC,IAAI,QAASF,GACrBH,KAAKJ,SAAWO,EAAIR,KAAKA,UAIjCW,SAAU,CACRC,gBACE,IAAIC,EAAM,EAIV,OAHAR,KAAKJ,SAASC,MAAMY,SAASC,IAC3BF,GAAOE,EAAKC,OAEPH,IAGXI,UACEZ,KAAKD,UACLlB,EAAAA,EAAAA,GAAW,YAAY,KACrBmB,KAAKD,e,QCtEX,MAAMc,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAAS,KAEpE,QFAA,GACEC,WAAY,CACVC,YAAAA,IGJJ,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE","sources":["webpack://week6/../src/index.ts","webpack://week6/./src/libs/emitter.js","webpack://week6/./src/views/FrontView.vue","webpack://week6/./src/components/FrontNavbar.vue","webpack://week6/./src/components/FrontNavbar.vue?6e20","webpack://week6/./src/views/FrontView.vue?9526"],"sourcesContent":["export type EventType = string | symbol;\n\n// An event handler can take an optional event argument\n// and should not return a value\nexport type Handler<T = unknown> = (event: T) => void;\nexport type WildcardHandler<T = Record<string, unknown>> = (\n\ttype: keyof T,\n\tevent: T[keyof T]\n) => void;\n\n// An array of all currently registered event handlers for a type\nexport type EventHandlerList<T = unknown> = Array<Handler<T>>;\nexport type WildCardEventHandlerList<T = Record<string, unknown>> = Array<WildcardHandler<T>>;\n\n// A map of event types and their corresponding event handlers.\nexport type EventHandlerMap<Events extends Record<EventType, unknown>> = Map<\n\tkeyof Events | '*',\n\tEventHandlerList<Events[keyof Events]> | WildCardEventHandlerList<Events>\n>;\n\nexport interface Emitter<Events extends Record<EventType, unknown>> {\n\tall: EventHandlerMap<Events>;\n\n\ton<Key extends keyof Events>(type: Key, handler: Handler<Events[Key]>): void;\n\ton(type: '*', handler: WildcardHandler<Events>): void;\n\n\toff<Key extends keyof Events>(type: Key, handler?: Handler<Events[Key]>): void;\n\toff(type: '*', handler: WildcardHandler<Events>): void;\n\n\temit<Key extends keyof Events>(type: Key, event: Events[Key]): void;\n\temit<Key extends keyof Events>(type: undefined extends Events[Key] ? Key : never): void;\n}\n\n/**\n * Mitt: Tiny (~200b) functional event emitter / pubsub.\n * @name mitt\n * @returns {Mitt}\n */\nexport default function mitt<Events extends Record<EventType, unknown>>(\n\tall?: EventHandlerMap<Events>\n): Emitter<Events> {\n\ttype GenericEventHandler =\n\t\t| Handler<Events[keyof Events]>\n\t\t| WildcardHandler<Events>;\n\tall = all || new Map();\n\n\treturn {\n\n\t\t/**\n\t\t * A Map of event names to registered handler functions.\n\t\t */\n\t\tall,\n\n\t\t/**\n\t\t * Register an event handler for the given type.\n\t\t * @param {string|symbol} type Type of event to listen for, or `'*'` for all events\n\t\t * @param {Function} handler Function to call in response to given event\n\t\t * @memberOf mitt\n\t\t */\n\t\ton<Key extends keyof Events>(type: Key, handler: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\thandlers.push(handler);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tall!.set(type, [handler] as EventHandlerList<Events[keyof Events]>);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Remove an event handler for the given type.\n\t\t * If `handler` is omitted, all handlers of the given type are removed.\n\t\t * @param {string|symbol} type Type of event to unregister `handler` from, or `'*'`\n\t\t * @param {Function} [handler] Handler function to remove\n\t\t * @memberOf mitt\n\t\t */\n\t\toff<Key extends keyof Events>(type: Key, handler?: GenericEventHandler) {\n\t\t\tconst handlers: Array<GenericEventHandler> | undefined = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\tif (handler) {\n\t\t\t\t\thandlers.splice(handlers.indexOf(handler) >>> 0, 1);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tall!.set(type, []);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Invoke all handlers for the given type.\n\t\t * If present, `'*'` handlers are invoked after type-matched handlers.\n\t\t *\n\t\t * Note: Manually firing '*' handlers is not supported.\n\t\t *\n\t\t * @param {string|symbol} type The event type to invoke\n\t\t * @param {Any} [evt] Any value (object is recommended and powerful), passed to each handler\n\t\t * @memberOf mitt\n\t\t */\n\t\temit<Key extends keyof Events>(type: Key, evt?: Events[Key]) {\n\t\t\tlet handlers = all!.get(type);\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as EventHandlerList<Events[keyof Events]>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(evt!);\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\thandlers = all!.get('*');\n\t\t\tif (handlers) {\n\t\t\t\t(handlers as WildCardEventHandlerList<Events>)\n\t\t\t\t\t.slice()\n\t\t\t\t\t.map((handler) => {\n\t\t\t\t\t\thandler(type, evt!);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n","import mitt from 'mitt';\n\nconst emitter = mitt();\nexport default emitter;\n","<template>\n  <FrontNavbar></FrontNavbar>\n  <router-view></router-view>\n</template>\n\n<script>\nimport FrontNavbar from '@/components/FrontNavbar.vue';\nexport default {\n  components: {\n    FrontNavbar,\n  },\n};\n</script>\n","<template>\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <router-link class=\"navbar-brand\" to=\"/\">豆ㄗ手工烘焙</router-link>\n      <button\n        class=\"navbar-toggler\"\n        type=\"button\"\n        data-bs-toggle=\"collapse\"\n        data-bs-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <!-- <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/\">首頁</router-link>\n          </li> -->\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/products\">產品列表</router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/cart\">購物車</router-link>\n          </li>\n          <li class=\"nav-item\">\n            <router-link class=\"nav-link\" to=\"/admin\">後台</router-link>\n          </li>\n        </ul>\n      </div>\n      <button type=\"button\" class=\"btn btn-primary\">\n        結帳\n        <span class=\"badge rounded-pill bg-danger\">\n          {{ filterCartLen }}\n        </span>\n      </button>\n    </div>\n  </nav>\n</template>\n\n<script>\nimport emitter from '@/libs/emitter';\n\nexport default {\n  data() {\n    return {\n      cartData: {\n        carts: [],\n      },\n    };\n  },\n\n  methods: {\n    getCart() {\n      this.$http\n        .get(`${process.env.VUE_APP_API}/api/${process.env.VUE_APP_PATH}/cart`)\n        .then((res) => {\n          console.log('cart:', res);\n          this.cartData = res.data.data;\n        });\n    },\n  },\n  computed: {\n    filterCartLen() {\n      let len = 0;\n      this.cartData.carts.forEach((item) => {\n        len += item.qty;\n      });\n      return len;\n    },\n  },\n  mounted() {\n    this.getCart();\n    emitter.on('get-cart', () => {\n      this.getCart();\n    });\n  },\n};\n</script>\n","import { render } from \"./FrontNavbar.vue?vue&type=template&id=9eddb6f0\"\nimport script from \"./FrontNavbar.vue?vue&type=script&lang=js\"\nexport * from \"./FrontNavbar.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bean/Downloads/week6-master/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./FrontView.vue?vue&type=template&id=ed77d86e\"\nimport script from \"./FrontView.vue?vue&type=script&lang=js\"\nexport * from \"./FrontView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/bean/Downloads/week6-master/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["all","Map","on","type","handler","handlers","get","push","set","off","splice","indexOf","emit","evt","slice","map","emitter","mitt","_createVNode","_component_FrontNavbar","_component_router_view","class","_createElementVNode","id","_createElementBlock","_component_router_link","to","_hoisted_4","_toDisplayString","$options","data","cartData","carts","methods","getCart","this","$http","then","res","console","log","computed","filterCartLen","len","forEach","item","qty","mounted","__exports__","components","FrontNavbar","render"],"sourceRoot":""}